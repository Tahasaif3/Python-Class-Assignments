# -*- coding: utf-8 -*-
"""python_assignment_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mckvz1fhgpxNscNT31TlsGU9KAoeIJvb

**Basic List Operations**
"""

# 1. Create a list of five numbers and append a new number to it. Print the updated list.
numbers_list = [1,2,3,4,5]
print(f"Numbers List: {numbers_list}")

# 2. Extend a list [1, 2, 3] with another list [4, 5, 6]. Print the result.
numbers_list.extend([6,7,8,9,10])
print(f"Extended Numbers List: {numbers_list}")

# 3. Insert the string "Python" at index 2 in the list ["Java", "C++", "JavaScript",
# "Ruby"].
courses_list = ["Java","C++","Javascript","Ruby"]
print(f"Courses List: {courses_list}")
courses_list.insert(2,"Python")
print(f"Updated Courses List: {courses_list}")

# 4. Remove the first occurrence of the number 10 from the list [10, 20, 30, 10, 40].
numbers = [10,20,30,10,40]
print(f"Numbers: {numbers}")
numbers.remove(10)
print(f"Updated Numbers List: {numbers}")

# 5. Use the pop() method to remove the last element from [100, 200, 300, 400] and
# print the modified list.
numbers = [100,200,300,400]
print(f"Numbers: {numbers}")
numbers.pop()
print(f"Updated Numbers List: {numbers}")

"""**Intermediate List Operations**"""

# 6. Count how many times the number 5 appears in the list [5, 10, 5, 20, 5, 30].
numbers = [5,10,5,20,5,30]
print(f"Numbers: {numbers}")
result = numbers.count(5)
print(f"5 appears {result} times")

# 7. Sort the list [9, 1, 8, 3, 5] in ascending and descending order.
numbers = [9, 1, 8, 3, 5]
print(f"Numbers: {numbers}")
numbers.sort()
print(f"Ascending Order: {numbers}")
numbers.sort(reverse=True)
print(f"Descending Order: {numbers}")

# 8. Reverse the list [“apple”, “banana”, “cherry”] using the reverse() method.
fruits = ["apple","banana","cherry"]
print(f"Fruits: {fruits}")
fruits.reverse()
print(f"Reversed Fruits: {fruits}")

# 9. Create a copy of the list [1, 2, 3, 4, 5] and store it in another variable. Modify the
# copied list and print both lists.
numbers = [1,2,3,4,5]
print(f"Numbers: {numbers}")
another_numbers = numbers.copy()
print(f"Another Numbers: {another_numbers}")

# 10. Clear all elements from a list [“hello”, “world”, “python”] using the clear()
# method.
words = ["hello", "world", "python"]
print(f"Words: {words}")
clear_words = words.clear()
print(f"Clear Words List: {clear_words}")

"""**Tuple-Based Questions**"""

#11. Create a tuple with 5 different fruits and print the third fruit.
fruits = ("apple","banana","cherry","orange","kiwi")
print(f"Fruits: {fruits}")
print(f"Third Fruit: {fruits[2]}")

# 12. Convert the tuple (10, 20, 30, 40, 50) into a list, remove the number 30, and convert
# it back into a tuple.
numbers = (10, 20, 30, 40, 50)
print(f"Original Numbers: {numbers}")
numbers_list = list(numbers)
print(f"Converted Numbers to a List: {numbers_list}")
numbers_list.remove(30)
print(f"Updated Numbers List after Removing 30: {numbers_list}")
numbers = tuple(numbers_list)
print(f"Converted the List back to a Tuple: {numbers}")

# 13. Try to append an element to the tuple (“A”, “B”, “C”). What happens? How can you
# modify a tuple indirectly?
elements = ('a','b','c')
print(f"Original Elements: {elements}")
elements_list = list(elements)
print(f"Converted Elements to a List: {elements_list}")
elements_list.append('d')
print(f"Added 'd' to the List: {elements_list}")
elements = tuple(elements_list)
print(f"Converted the List back to a Tuple: {elements}")

# 14. Unpack the tuple (100, 200, 300) into three separate variables and print them.
numbers = (100,200,300)
print(f"Original Numbers: {numbers}")
a,b,c = numbers
print(f"Unpacked Numbers: {a},{b},{c}")

# 15. Count the occurrences of 7 in the tuple (7, 1, 7, 3, 7, 5).
numbers = (7,1,7,3,7,5)
print(f"Original Numbers: {numbers}")
result = numbers.count(7)
print(f"7 appears {result} times")

"""**Advanced Problems**"""

# 16. Write a function that takes a list and returns a new list with all even numbers removed.
def even_remove_function(numbers):
  new_lst = []
  for i in numbers:
    if i % 2 != 0:
      new_lst.append(i)
  return new_lst

numbers = [1,2,3,4,5,6,7,8,9,10]
print(f"Original Numbers: {numbers}")
new_numbers = even_remove_function(numbers)
print(f"Filtered Even Numbers: {new_numbers}")

# 17. Create a function that accepts a list and returns a new list with elements sorted in
# descending order without using the sort() method.
def sort_descending(list1):
  new_lst = list1[:]
  for i in range(0,len(new_lst)):
   for d in range(i+1,len(new_lst)):
    if new_lst[i] <= new_lst[d]:
     new_lst[i],new_lst[d] = new_lst[d],new_lst[i]
  return new_lst

list1 = [1,4,6,8,9,12,45]
print(f"Original List: {list1}")
new_list = sort_descending(list1)
print(f"Sorted List: {new_list}")

# 18. Given a list of numbers, write a program to remove all duplicate elements and print the
# unique elements.
def remove_duplicates(lst):
  new_lst = []
  for element in lst:
    if element not in new_lst:
      new_lst.append(element)
  return new_lst

numbers = [1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]
print(f"Duplicate Numbers List: {numbers}")
new_numbers = remove_duplicates(numbers)
print(f"Removed Duplicates: {new_numbers}")

print("Second Method")

numbers = [1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]
print(f"Duplicate Numbers List: {numbers}")
remove_duplicates = set(numbers)
print(f"Removed Duplicates: {remove_duplicates}")

# 19. Given a tuple of names (“Alice”, “Bob”, “Charlie”, “Alice”, “David”), convert
# it into a list, remove duplicates, and convert it back to a tuple.

names = ("Alice","Bob","Charlie","Alice","David")
print(f"Names: {names}")
names_list = list(names)
print(f"Converted Names to a List: {names_list}")
names_list = set(names_list)
print(f"Removed Duplicates: {names_list}")
names = tuple(names_list)
print(f"Converted the List back to a Tuple: {names}")

print("Second Method")

names = ("Alice","Bob","Charlie","Alice","David")
names_list = list(names)
print(f"Names: {names_list}")
unique_names = []

for name in names_list:
  if name not in unique_names:
    unique_names.append(name)
names_list = unique_names
unique_names_tuple = tuple(unique_names)
print(f"Removed Duplicates:{unique_names_tuple}")

# 20. Create a program that takes a list of mixed data types (int, str, float) and separates
# integers into one list, strings into another, and floats into another.

mixed_list = [1, "hello", 2.5, 42, "world", 3.14, 100, "123", 0.99]
print(f"Mixed List: {mixed_list}")

int_list = []
str_list = []
float_list = []

for element in mixed_list:
  if type(element) == int:
    int_list.append(element)
  elif type(element) == str:
    str_list.append(element)
  elif type(element) == float:
    float_list.append(element)

print(f"Integer List: {int_list}")
print(f"String List: {str_list}")
print(f"Float List: {float_list}")